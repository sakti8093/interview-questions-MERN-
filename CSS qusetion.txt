1-how to add comments on css?
ans-To comment in CSS, simply place your plain text inside /* */ marks. This tells the browser that they are notes and should not be rendered on the front end.

2-Why do we use pseudo-class?
ans-CSS pseudo-classes are used to add special effects to some selectors.

selector:pseudo-class {
  property: value;
}
example:

div:hover {
  background-color: blue;
}

3-How is specificity applied?
ans-If there are two or more CSS rules that point to the same element, the selector with the highest specificity value will "win", and its style declaration will be applied to that HTML element.

 Selector                                | Thousands | Hundreds | Tens | Ones | Total |
| --------------------------------------- | --------- | -------- | ---- | ---- | ----- |
| h1                                      | 0         | 0        | 0    | 1    | 0001  |
| h1 + p                                  | 0         | 0        | 0    | 2    | 0002  |
| h1 + p::first-letter                    | 0         | 0        | 0    | 3    | 0003  |
| li > a[href*="en-US"] > .inline-warning | 0         | 0        | 2    | 2    | 0022  |
| .class1                                 | 0         | 0        | 1    | 0    | 0010  |
| ul.class1                               | 0         | 0        | 1    | 1    | 0011  |
| #id1                                    | 0         | 1        | 0    | 0    | 0100  |
| style                                   | 1         | 0        | 0    | 0    | 1000  |

4-What method allows an element to be moved from its current position?
ans-The translate() method moves an element from its current position (according to the parameters given for the X-axis and the Y-axis).

5-What properties does flex model have?
ans-

6-What is the difference between flex and grids?
ans-Grid is made for two-dimensional layout while Flexbox is for one. This means Flexbox can work on either row or columns at a time, but Grids can work on both.
Major Uniqueness between Flexbox and Grids is that the former works on content while the latter is based on the layout.
CSS Grids helps you create the outer layout of the webpage. You can build complex as well responsive design with this. This is why it is called ‘layout first’. Flexbox mostly helps align content & move blocks.

7-Give an example where we have to use grids and where you have to use flexbox?
ans-Grid is made for two-dimensional layout while Flexbox is for one. This means Flexbox can work on either row or columns at a time, but Grids can work on both.

Major Uniqueness between Flexbox and Grids is that the former works on content while the latter is based on the layout.

CSS Grids helps you create the outer layout of the webpage. You can build complex as well responsive design with this. This is why it is called ‘layout first’. Flexbox mostly helps align content & move blocks.

Give an example where we have to use grids and where you have to use flexbox?
CSS Grids helps you create the outer layout of the webpage. You can build complex as well responsive design with this. This is why it is called ‘layout first’. While flexbox mostly helps align content & move blocks.

CSS grids are for 2D layouts. It works with both rows and columns.Flexbox works better in one dimension only (either rows OR columns).

You should consider flexbox when :

You have a small design to implement
You need to align elements
You need a content-first design
You should consider CSS grid when :

You have a complex design to implement
You need to have a gap between block elements
You need to overlap elements
You need a layout-first design
In simple terms
"CSS grid is for layout, Flexbox is for alignment"

8-Give an example where you cannot use flexbox, and you can only use grids?
ans-If you have some complex layout as this wherein you want to layout in different ways basis the screen size; You'd rather use CSS grid over flex;

for a simple one dimensional layout flexbox can be useful to help align content

9-What are combinators? give examples of how you can use them?
ans-

10-What does object-fit do?
ans-The CSS object-fit property is used to specify how an <img> or <video> should be resized to fit its container.

ans-This property tells the content to fill the container in a variety of ways; such as "preserve that aspect ratio" or "stretch up and take up as much space as possible".

11-What does rotate do?
The transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements.

12-What rule can be used to define animations
ans-The @keyframes rule specifies the animation code.

The animation is created by gradually changing from one set of CSS styles to another.

During the animation, you can change the set of CSS styles many times.

Specify when the style change will happen in percent, or with the keywords "from" and "to", which is the same as 0% and 100%. 0% is the beginning of the animation, 100% is when the animation is complete.

@keyframes animationname {keyframes-selector {css-styles;}}

13-When working with attribute selectors, how can you select elements which contain a particular attribute value?
ans-a[href*="en-US"] // selects an `a` tag which a particular href attribute value that has been asked

14-What does @media do?
ans-The @media rule is used in media queries to apply different styles for different media types/devices.

Media queries can be used to check many things, such as:

width and height of the viewport
width and height of the device
orientation (is the tablet/phone in landscape or portrait mode?)
resolution
Using media queries are a popular technique for delivering a tailored style sheet (responsive web design) to desktops, laptops, tablets, and mobile phones.

You can also use media queries to specify that certain styles are only for printed documents or for screen readers (mediatype: print, screen, or speech).

In addition to media types, there are also media features. Media features provide more specific details to media queries, by allowing to test for a specific feature of the user agent or display device. For example, you can apply styles to only those screens that are greater, or smaller, than a certain width.

body {
  background-color: lightblue;
}

@media screen and (min-width: 400px) {
  body {
    background-color: lightgreen;
  }
}

@media screen and (min-width: 800px) {
  body {
    background-color: lavender;
  }
}

15-What can be used to override properties of an element
To override the CSS properties of a class using another class, we can use the !important directive. In CSS, !important means “this is important”, and the property:value pair that has this directive is always applied even if the other element has higher specificity.
Syntax :

element1 {
    property-x: value_y  !important; /* This will be applied. */
}
element2 {
    property-x: value_z; /* This will not be applied. */
}

16-How can you select every alternate elements in a list of elements using css?
ans-ul{
  list-style-type: none;
  color: white;
}
li:nth-of-type(odd){ // or you can also use li:nth-child(odd)
  background-color:blue;
}
li:nth-of-type(even){
  background-color:red;
}

17-What is the ranking of selectors with respect to specificity
Ranking from Low To High

ans-universal_selector, combinators selector, negation pseudo-class (:not) selector ( these selectors have no effects on specificity )
element selector, pseudo element selector
class selector, attribute selector, pseudo-class contained inside the overall selector
id selector
inline styling

18-How can we apply same styles to multiple selectors?
ans-To group CSS selectors in a style sheet, use commas to separate multiple grouped selectors in the style. In this example, the style affects the p and div elements:
div, p { color: #f00; }

19-What are the differences between relative and absolute in CSS?
Relative	                                                                                                               Absolute
An element with position: relative; is positioned relative to its normal position.                               	      An element with position: absolute; is positioned relative to the nearest positioned ancestor. However; if an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling.
Setting the top, right, bottom, and                                                                                       Absolute positioned elements are removed from the normal flow, and can overlap elements.
 left properties of a relatively-positioned element will cause it to be adjusted away from its normal position.
  Other content will not be adjusted to fit into any gap left by the element.
